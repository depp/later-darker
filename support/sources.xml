<?xml version="1.0" encoding="UTF-8"?>
<sources>

  <src path="gl_shader_data.cpp"/>
  <src path="gl_shader_data.hpp"/>
  <src path="gl_shader.hpp"/>
  <src path="gl.hpp"/>
  <src path="log.hpp"/>
  <src path="main.hpp"/>
  <src path="scene_cube.cpp"/>
  <src path="scene_cube.hpp"/>
  <src path="scene_triangle.cpp"/>
  <src path="scene_triangle.hpp"/>
  <src path="var_def.hpp"/>
  <src path="var.hpp"/>

  <group condition="compo">
    <src path="gl_shader_compo.cpp"/>
    <src path="main_windows_compo.cpp"/>
    <generator rule="gl:api" name="compo">
      <properties>
        <api>3.3</api>
        <link>1.1</link>
        <config>windows:compo</config>
      </properties>
      <output path="gl_api_compo.hpp"/>
      <output path="gl_api_compo.cpp"/>
    </generator>
    <generator rule="gl:shaders" name="compo">
      <output path="gl_shaders_compo.cpp"/>
    </generator>
  </group>

  <group condition="!compo">

    <src path="gl_common.cpp"/>
    <src path="gl_debug.cpp"/>
    <src path="gl_debug.hpp"/>
    <src path="gl_shader_full.cpp"/>
    <src path="log_internal.hpp"/>
    <src path="log_standard.cpp"/>
    <src path="log_standard.hpp"/>
    <src path="main.cpp"/>
    <src path="os_file.hpp"/>
    <src path="os_string.cpp"/>
    <src path="os_string.hpp"/>
    <src path="text_buffer.cpp"/>
    <src path="text_buffer.hpp"/>
    <src path="text_unicode.cpp"/>
    <src path="text_unicode.hpp"/>
    <src path="util.hpp"/>
    <src path="var.cpp"/>

    <group condition="windows">
      <src path="gl_windows.cpp"/>
      <src path="log_windows.cpp"/>
      <src path="os_file_windows.cpp"/>
      <src path="os_windows.cpp"/>
      <src path="os_windows.hpp"/>
      <src path="wide_text_buffer.cpp"/>
      <src path="wide_text_buffer.hpp"/>
      <generator rule="gl:api" name="full">
        <properties>
          <api>3.3 GL_KHR_debug</api>
          <link>1.1</link>
        </properties>
        <output path="gl_api_full.hpp"/>
        <output path="gl_api_full.cpp"/>
      </generator>
     </group>

     <group condition="!windows">
      <src path="log_unix.cpp"/>
      <src path="os_file_unix.cpp"/>
      <src path="os_unix.cpp"/>
      <src path="os_unix.hpp"/>
    </group>

    <generator rule="gl:shaders" name="full">
      <output path="gl_shaders_full.cpp"/>
    </generator>

  </group>

</sources>
